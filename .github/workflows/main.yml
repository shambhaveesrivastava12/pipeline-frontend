name: CICD Practice

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  install-dependencies:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '14'

      - name: Install project dependencies
        run: npm install

  build:
    runs-on: ubuntu-latest
    needs: install-dependencies
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '14'

      - name: Install project dependencies
        run: npm install

      - name: Build application
        run: CI=false npm run build

  create-artifact:
    runs-on: ubuntu-latest
    needs: build
    defaults:
      run:
        working-directory: ./client
    steps:
      - name: Save build folder
        uses: actions/upload-artifact@v4
        with:
          name: build
          if-no-files-found: error
          path: client/public
          
      - name: Download the build folder
        uses: actions/download-artifact@v4
        with:
          name: build
          path: build      

  deploy:
    runs-on: ubuntu-latest
    needs: create-artifact
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Load Docker image
        uses: actions/download-artifact@v2
        with:
          name: build-artifact
          path: /tmp/build

      - name: Build Docker image
        run: docker build -t ${{ secrets.DOCKER_USERNAME }}/frontend-artifact-mtc /tmp/build

      - name: Push Docker image to DockerHub
        run: docker push ${{ secrets.DOCKER_USERNAME }}/frontend-artifact-mtc

      
